#!perl

our $DATE = '2014-07-25'; # DATE
our $VERSION = '0.03'; # VERSION

use 5.010001;
use strict;
use warnings;

use File::Slurp::Tiny qw(write_file);
use Perinci::CmdLine::Any;
use PHPLive::Report qw(%reports %legends);
use String::JS qw(encode_js_string);

our %SPEC;
$SPEC{gen_phplive_reports} = {
    v => 1.1,
    args => {
        db_dsn  => {schema=>'str*', req=>1},
        db_user => {schema=>'str'},
        db_pass => {schema=>'str'},
        year    => {schema=>'int*', req=>1},
        month   => {schema=>['int*', between=>[1,12]], req=>1},
    },
};
sub gen_phplive_reports {
    require Data::Format::Pretty::HTML;
    require DBI;
    require PHPLive::Report;

    my %args = @_;
    my $year   = int($args{year});
    my $month  = int($args{month});

    my $period = sprintf("%04d-%02d", $year, $month);

    my $dbh = DBI->connect($args{db_dsn}, $args{db_user}, $args{db_pass},
                           {RaiseError=>1});

    my $res = PHPLive::Report::gen_phplive_reports(
        dbh=>$dbh, year=>$year, month=>$month);

    my @fres;
    push @fres, "<html><head><title>PHP Live! Reports for $period</title>";
    push @fres, qq(<script type="text/javascript" src="jquery.js"></script>\n);
    push @fres, qq(<script type="text/javascript" src="jquery.tablesorter.js"></script>\n);
    push @fres, qq(<link rel="stylesheet" href="themes/blue/style.css" type="text/css" media="print, projection, screen" />\n);
    push @fres, q(<script>)."\n";
    push @fres, q|  $(document).ready(function() {|."\n";
    for my $k (sort keys %legends) {
        push @fres, qq|    \$("th:contains(${\( encode_js_string($k, 2) )})").attr("title", ${\( encode_js_string($legends{$k}) )})|."\n";
    }
    push @fres, q(    $("table").addClass("tablesorter").tablesorter())."\n";
    push @fres, q|  });|."\n";
    push @fres, q(</script>)."\n";
    push @fres, "</head>\n";
    push @fres, "<body>\n";
    push @fres, "<h1>PHP Live! Reports for $period</h1>\n";

    for my $k (sort keys %$res) {
        push @fres, "<h2>$k</h2>\n";
        push @fres, Data::Format::Pretty::HTML::format_pretty($res->{$k});
        push @fres, "\n";
    }

    push @fres, "</body></html>\n";

    my $fname = "phplive-reports-$period.html";
    write_file($fname, join("", @fres));

    [200, "OK"];
}

Perinci::CmdLine::Any->new(
    url => "/main/gen_phplive_reports",
)->run;

# ABSTRACT: Generate reports for PHP Live!
# PODNAME: gen-phplive-reports

__END__

=pod

=encoding UTF-8

=head1 NAME

gen-phplive-reports - Generate reports for PHP Live!

=head1 VERSION

This document describes version 0.03 of gen-phplive-reports (from Perl distribution PHPLive-Report), released on 2014-07-25.

=head1 SYNOPSIS

 % gen-phplive-reports --db-dsn dbi:mysql:dbname=PHPLIVE --db-user PHPLIVE --db-pass SECRET --year 2014 --month 7

Will produce C<phplive-reports-YYYY-MM.html> file in current directory.

To make nice sortable tables, I use jQuery tablesorter plugin,
L<http://tablesorter.com/>. Drop the jQuery as well as the tablesorter files
into the same directory as the reports.

=head1 SEE ALSO

L<PHPLive::Report>

=head1 HOMEPAGE

Please visit the project's homepage at L<https://metacpan.org/release/PHPLive-Report>.

=head1 SOURCE

Source repository is at L<https://github.com/sharyanto/perl-PHPLive-Report>.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website L<https://rt.cpan.org/Public/Dist/Display.html?Name=PHPLive-Report>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=head1 AUTHOR

Steven Haryanto <stevenharyanto@gmail.com>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2014 by Steven Haryanto.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
